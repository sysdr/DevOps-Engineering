name: Reusable Test Workflow

on:
  workflow_call:
    inputs:
      service-path:
        required: true
        type: string
        description: 'Path to service directory'
      python-version:
        required: false
        type: string
        default: '3.11'
        description: 'Python version to use'
      cache-key-prefix:
        required: false
        type: string
        default: 'pip'
        description: 'Cache key prefix'
    outputs:
      test-results:
        description: 'Test execution results'
        value: ${{ jobs.test.outputs.test-results }}
      coverage:
        description: 'Code coverage percentage'
        value: ${{ jobs.test.outputs.coverage }}

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      test-results: ${{ steps.test.outputs.results }}
      coverage: ${{ steps.coverage.outputs.percentage }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ inputs.cache-key-prefix }}-${{ inputs.python-version }}-${{ hashFiles(format('{0}/requirements.txt', inputs.service-path)) }}
          restore-keys: |
            ${{ inputs.cache-key-prefix }}-${{ inputs.python-version }}-

      - name: Install dependencies
        working-directory: ${{ inputs.service-path }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        id: test
        working-directory: ${{ inputs.service-path }}
        run: |
          python -m pytest tests/ -v --tb=short --cov=src --cov-report=xml --cov-report=term
          echo "results=passed" >> $GITHUB_OUTPUT

      - name: Coverage report
        id: coverage
        working-directory: ${{ inputs.service-path }}
        run: |
          coverage report --format=total > coverage.txt
          echo "percentage=$(cat coverage.txt)" >> $GITHUB_OUTPUT

      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        with:
          name: coverage-${{ inputs.service-path }}
          path: ${{ inputs.service-path }}/coverage.xml
